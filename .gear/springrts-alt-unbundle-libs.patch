diff --git a/spring/rts/Rendering/Models/AssIO.h b/spring/rts/Rendering/Models/AssIO.h
index a3ba046202..72af993344 100644
--- a/spring/rts/Rendering/Models/AssIO.h
+++ b/spring/rts/Rendering/Models/AssIO.h
@@ -3,8 +3,8 @@
 #ifndef ASS_IO_H
 #define ASS_IO_H
 
-#include "lib/assimp/include/assimp/IOStream.hpp"
-#include "lib/assimp/include/assimp/IOSystem.hpp"
+#include <assimp/IOStream.hpp>
+#include <assimp/IOSystem.hpp>
 class CFileHandler;
 
 // Custom implementation of Assimp IOStream to support Spring's VFS
diff --git a/spring/rts/Rendering/Models/AssParser.cpp b/spring/rts/Rendering/Models/AssParser.cpp
index 92de398cbe..ddf75097e5 100644
--- a/spring/rts/Rendering/Models/AssParser.cpp
+++ b/spring/rts/Rendering/Models/AssParser.cpp
@@ -16,13 +16,13 @@
 #include "System/FileSystem/FileHandler.h"
 #include "System/FileSystem/FileSystem.h"
 
-#include "lib/assimp/include/assimp/config.h"
-#include "lib/assimp/include/assimp/defs.h"
-#include "lib/assimp/include/assimp/types.h"
-#include "lib/assimp/include/assimp/scene.h"
-#include "lib/assimp/include/assimp/postprocess.h"
-#include "lib/assimp/include/assimp/Importer.hpp"
-#include "lib/assimp/include/assimp/DefaultLogger.hpp"
+#include <assimp/config.h>
+#include <assimp/defs.h>
+#include <assimp/types.h>
+#include <assimp/scene.h>
+#include <assimp/postprocess.h>
+#include <assimp/Importer.hpp>
+#include <assimp/DefaultLogger.hpp>
 
 
 
diff --git a/spring/rts/Rendering/Models/IModelParser.cpp b/spring/rts/Rendering/Models/IModelParser.cpp
index ad73e7e43c..3bf8e5b375 100644
--- a/spring/rts/Rendering/Models/IModelParser.cpp
+++ b/spring/rts/Rendering/Models/IModelParser.cpp
@@ -17,7 +17,7 @@
 #include "System/MainDefines.h" // SNPRINTF
 #include "System/SafeUtil.h"
 #include "System/Threading/ThreadPool.h"
-#include "lib/assimp/include/assimp/Importer.hpp"
+#include <assimp/Importer.hpp>
 
 
 static void RegisterAssimpModelFormats(CModelLoader::FormatMap& formats) {
diff --git a/spring/rts/builds/dedicated/CMakeLists.txt b/spring/rts/builds/dedicated/CMakeLists.txt
index 80e9e4b78b..eec55a7e76 100644
--- a/spring/rts/builds/dedicated/CMakeLists.txt
+++ b/spring/rts/builds/dedicated/CMakeLists.txt
@@ -20,9 +20,11 @@ SET(ENGINE_SRC_ROOT_DIR "${CMAKE_SOURCE_DIR}/rts")
 
 
 ### Assemble libraries
+FIND_PACKAGE(ZLIB REQUIRED)
+FIND_PACKAGE(MiniZip REQUIRED)
 LIST(APPEND engineDedicatedLibraries ${Boost_REGEX_LIBRARY})
 LIST(APPEND engineDedicatedLibraries ${Boost_SYSTEM_LIBRARY})
-LIST(APPEND engineDedicatedLibraries lua archives 7zip ${SPRING_MINIZIP_LIBRARY} ${ZLIB_LIBRARY} gflags)
+LIST(APPEND engineDedicatedLibraries lua archives 7zip ${MINIZIP_LIBRARY} ${ZLIB_LIBRARY} gflags)
 LIST(APPEND engineDedicatedLibraries headlessStubs engineSystemNet)
 LIST(APPEND engineDedicatedLibraries ${LIBUNWIND_LIBRARIES})
 
diff --git a/spring/rts/builds/headless/CMakeLists.txt b/spring/rts/builds/headless/CMakeLists.txt
index 829c5e1ac7..fb8fbd6ddb 100644
--- a/spring/rts/builds/headless/CMakeLists.txt
+++ b/spring/rts/builds/headless/CMakeLists.txt
@@ -42,6 +42,9 @@ LIST(APPEND engineHeadlessLibraries no-sound)
 LIST(APPEND engineHeadlessLibraries engineSim)
 LIST(APPEND engineHeadlessLibraries pr-downloader_static)
 
+FIND_PACKAGE(ZLIB REQUIRED)
+LIST(APPEND engineHeadlessLibraries ${ZLIB_LIBRARY})
+
 INCLUDE_DIRECTORIES(${ENGINE_SRC_ROOT_DIR}/lib/assimp/include)
 INCLUDE_DIRECTORIES(${ENGINE_SRC_ROOT_DIR}/lib/asio/include)
 INCLUDE_DIRECTORIES(${ENGINE_SRC_ROOT_DIR}/lib/slimsig/include)
diff --git a/spring/rts/lib/CMakeLists.txt b/spring/rts/lib/CMakeLists.txt
index 36f82a3c34..e1e2231537 100644
--- a/spring/rts/lib/CMakeLists.txt
+++ b/spring/rts/lib/CMakeLists.txt
@@ -4,7 +4,6 @@ INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/rts)
 ADD_SUBDIRECTORY(lua)
 ADD_SUBDIRECTORY(luasocket)
 ADD_SUBDIRECTORY(7z)
-ADD_SUBDIRECTORY(minizip)
 ADD_SUBDIRECTORY(headlessStubs)
 if (ENABLE_STREFLOP)
 ADD_SUBDIRECTORY(streflop)
@@ -50,9 +49,6 @@ foreach(var ASSIMP_BUILD_STATIC_LIB ASSIMP_NO_EXPORT)
 	set("${var}" ON CACHE STRING "forced on by spring build env" FORCE)
 endforeach()
 
-ADD_SUBDIRECTORY(assimp)
-target_compile_definitions(assimp PRIVATE -DASSIMP_BUILD_NO_OWN_ZLIB)
-
 if    (NOT HEADLESS_SYSTEM)
 
 	if    (USE_LIBSQUISH)
diff --git a/spring/tools/pr-downloader/CMakeLists.txt b/spring/tools/pr-downloader/CMakeLists.txt
index 112efc5d9f..6fe8656a0c 100644
--- a/spring/tools/pr-downloader/CMakeLists.txt
+++ b/spring/tools/pr-downloader/CMakeLists.txt
@@ -31,8 +31,8 @@ OPTION(PRD_DO_INSTALL "install files" ON)
 OPTION(PRD_ARCHIVE_SUPPORT "enable archive support" ON)
 OPTION(PRD_CLEAR_COMPILER_FLAGS "clear all compiler flags" OFF)
 
-find_package(Jsoncpp)
-if (${Jsoncpp_FOUND})
+find_package(jsoncpp)
+if (${jsoncpp_FOUND})
 	OPTION(PRD_JSONCPP_INTERNAL "use bundled JsonCpp" FALSE)
 else()
 	OPTION(PRD_JSONCPP_INTERNAL "use bundled JsonCpp" TRUE)
diff --git a/spring/tools/unitsync/CMakeLists.txt b/spring/tools/unitsync/CMakeLists.txt
index 1797263c3b..e520ba2fac 100644
--- a/spring/tools/unitsync/CMakeLists.txt
+++ b/spring/tools/unitsync/CMakeLists.txt
@@ -8,12 +8,13 @@ set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "../..")
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
 
 FIND_PACKAGE_STATIC(ZLIB REQUIRED)
+FIND_PACKAGE_STATIC(MiniZip REQUIRED)
 
 LIST(APPEND unitsync_libs ${CMAKE_DL_LIBS})
 LIST(APPEND unitsync_libs ${Boost_REGEX_LIBRARY} ${Boost_SYSTEM_LIBRARY} ${Boost_FILESYSTEM_LIBRARY})
 LIST(APPEND unitsync_libs 7zip lua headlessStubs archives)
 LIST(APPEND unitsync_libs ${ZLIB_LIBRARY})
-LIST(APPEND unitsync_libs ${SPRING_MINIZIP_LIBRARY})
+LIST(APPEND unitsync_libs ${MINIZIP_LIBRARY})
 
 IF (WIN32)
 	LIST(APPEND unitsync_libs ${WINMM_LIBRARY})
@@ -43,7 +44,7 @@ REMOVE_DEFINITIONS(-DTHREADPOOL)
 
 set(ENGINE_SRC_ROOT "../../rts")
 
-INCLUDE_DIRECTORIES(${SPRING_MINIZIP_INCLUDE_DIR})
+INCLUDE_DIRECTORIES(${MINIZIP_INCLUDE_DIR})
 INCLUDE_DIRECTORIES(${ENGINE_SRC_ROOT}/lib/lua/include)
 INCLUDE_DIRECTORIES(${ENGINE_SRC_ROOT}/lib/7zip)
 INCLUDE_DIRECTORIES(${ENGINE_SRC_ROOT})
